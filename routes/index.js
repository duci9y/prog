var express = require('express');
var passport = require('passport');
var School = require('../models').School;
var router = express.Router();
var sys = require('sys');
var fs = require('fs');
var path = require('path');
var spawn = require('child_process').spawn;
var AdmZip = require('adm-zip');
var randomstring = require('randomstring');

var problems = [{
	i: 0,
	input: "10\n504\n9999 254 5205 5251 4256 2166 3020 2150 2699 115 1449 2721 4214 4695 5274 2350 5920 4310 8236 9164 1113 6696 4946 8195 4882 1976 203 1696 2480 1655 1926 7549 8638 7076 1393 6955 6665 4986 5916 915 1081 2137 9581 822 5700 1608 7988 311 8598 2904 941 1453 5446 8214 6339 2448 6266 8062 3906 8366 1842 3101 5885 3224 2697 1379 2004 5050 1254 7940 282 3243 9665 720 1545 9480 2055 4639 5330 7253 5980 9819 5969 4205 8306 4513 46 7247 5766 2342 2222 5770 1800 2823 6856 9132 7987 2891 4923 8898 8655 9735 9242 7474 7229 6037 8673 2372 9527 2698 2654 526 7374 1291 3342 6724 4180 5669 8167 3200 8368 1834 9748 8282 8305 3344 6563 5859 2977 8532 7975 8030 6064 5202 9471 5780 9481 6024 2300 7163 2863 8869 8315 3108 3160 9227 6817 3858 5300 3329 5266 5827 5450 7505 1031 585 394 2183 4226 4815 774 4441 263 5373 7893 8712 2255 959 284 332 2862 3023 5321 2296 2838 1877 8913 5476 7942 2130 1600 2004 6747 9254 1336 6397 1696 5843 490 8604 6118 3552 9110 1136 3764 6161 4544 6614 254 7049 6690 648 9091 643 6113 5379 1053 4287 5855 1483 7252 9814 8735 9391 1305 422 6573 6280 5730 1260 8024 1027 2659 919 7090 1335 217 5247 371 824 6591 9345 5871 2871 7921 6627 8195 6503 2587 4762 1645 5268 2758 33 8605 2720 9480 6806 4810 2270 4754 3780 5511 2229 3278 350 4345 5189 9203 9629 1087 7249 6727 9881 2626 8340 273 8848 5604 7256 9033 9685 7594 6120 2788 1189 6732 4626 9633 9517 6275 115 811 2308 698 5199 2210 7449 5209 2540 47 7850 2097 951 6887 199 571 4797 6802 5434 5011 8421 4281 7532 8165 743 2151 8794 5150 9443 9941 314 967 9155 1792 1567 5709 746 3290 207 4557 801 2311 884 5698 7014 1337 8078 2508 893 1412 973 3779 6574 3463 9271 4338 7782 5315 3247 7986 1733 3828 1811 247 1875 1943 9893 1563 5473 5704 2611 5081 9071 6620 8622 6840 3560 5453 7061 46 9593 9357 5825 7555 9619 1028 7045 6047 8221 7554 2405 3110 3336 8490 2462 7325 8441 8550 6875 5988 9126 6215 4229 552 9026 5615 5270 5689 8154 3417 3240 9198 5921 8525 3325 2035 8817 1718 1965 5779 3446 5131 9422 736 3089 2035 3175 1023 3236 8824 7524 6078 4367 5022 8877 2753 7874 3393 4255 4918 7267 4019 7017 6633 3414 7051 1030 6517 1531 1790 3194 9484 2220 2668 2969 8230 2837 2378 1065 2568 6351 8356 6865 3545 5001 5506 7769 8641 7325 5740 3940 7860 7206 2332 3023 6808 2045 6600 1404 1999 7469 4833 9537 5773 2875 8753 2528 764 2568 9055 7096 6769 6604 9638 4869 2590 71 2829 7903 7603 7341 4275 5702 4877 7634 2509 3075 6012 7455 5010 9467 4868 5813 7668 124 4552 9919 6291 9051 5639 8608 4472 5671 \n170\n5911 2413 7640 6140 6425 6071 8590 6733 4573 5386 518 5936 3776 2194 346 9913 3588 9345 7822 3289 2662 102 15 6064 2967 2930 3372 5311 5099 7200 1186 4985 6024 6623 3537 4368 1043 9981 125 291 8358 2575 585 3613 74 32 3915 1786 7423 3878 6305 1097 1981 2795 2717 6519 5460 8933 8946 8068 6183 4462 2124 9101 5079 1845 6796 1446 4396 2343 2993 1952 769 9995 4932 7020 3806 1779 4710 8995 1915 6054 7838 9077 7283 6308 1752 7466 152 320 5343 1414 2884 9255 4200 1634 3205 8558 5980 183 5918 247 5808 7156 2794 5795 6443 4987 949 4234 3883 7427 4169 688 4483 8639 6891 3201 318 5523 3170 5560 8719 9864 898 5475 613 3033 5929 9006 220 8727 1728 7599 5913 7514 6819 6839 1905 3065 7878 3186 617 6525 827 8013 7365 4931 2346 3330 9536 259 1029 6741 4664 3907 8089 6766 9481 9087 6188 700 4164 8436 7292 7847 3928 3753 1763 9142 \n616\n362 8209 5698 6268 5215 6528 1816 4647 6310 4476 7524 3230 260 3212 8070 5254 820 8247 1732 2748 3870 12 5291 7750 2839 5703 2359 6122 8728 103 5647 1101 7080 151 2330 2020 8080 99 4608 4831 9704 6105 5705 2305 9086 3035 3386 4647 2324 2898 4874 8299 6440 1073 5418 3437 7736 228 573 3840 7335 61 2917 5561 954 4770 7331 6191 4822 1216 1970 4863 7287 7627 6075 4208 1312 5601 1025 4101 9772 9456 5442 6316 3439 1445 9519 1875 7317 501 1403 1934 4103 3485 1723 6914 1144 6505 5715 3652 870 6283 5481 9221 7570 1025 9073 5678 5673 6656 122 6388 6851 4843 1754 4940 864 3960 1760 3435 469 7579 3091 9037 5441 3893 4576 359 2001 7848 3606 2205 7781 5203 1103 3203 9375 8632 9996 3853 5327 5211 9831 4872 2350 5808 7742 7995 7492 8681 7284 5716 2234 2558 6594 8382 3722 5839 6926 2563 5973 7464 2294 3247 2720 6833 2020 6548 5031 1202 1087 6534 2194 9480 3871 3043 4132 6347 1874 8068 4211 2056 8264 2724 1879 9070 8998 531 8367 5995 3377 9331 5668 5663 1477 8939 4942 750 8358 7127 8163 8324 205 5290 8286 7921 2560 1639 4760 7922 9459 9056 7382 7504 8782 3584 8171 9537 2762 3717 3413 9508 5611 8487 7332 1168 9951 6454 9687 7063 3050 7222 3756 2869 9449 8047 8757 5982 2545 6698 8804 3230 2252 3666 846 5746 6934 313 1763 6548 7748 213 117 2579 7993 2594 7860 8466 4817 8203 8199 8284 4120 3114 7461 1308 6802 38 1744 7941 9936 7883 7113 5454 3146 9422 2970 6843 4961 1483 1426 7655 1900 8010 9111 3532 4685 5001 6977 3601 4374 7014 3756 2811 9918 4652 1734 7992 3994 4372 9723 4507 1700 8963 7181 945 5140 4866 6724 6240 2465 9674 3374 7380 8038 6463 6448 8338 3456 9868 3078 8252 1586 3252 6170 3331 7332 8578 1237 7794 9145 5249 743 5761 4093 46 3189 2562 9355 406 3264 6112 3804 5278 172 2181 706 1787 9987 4651 1083 5002 4337 7074 7888 8327 5893 2458 5742 465 4093 7416 3474 5835 4363 5731 7455 4932 9100 285 9331 383 1080 6412 7660 2514 2306 3291 160 2991 6249 354 1608 6497 2009 2913 822 1053 4651 6956 2667 8713 8681 3683 8863 8650 4924 5598 1844 8576 9037 5817 2478 5404 8946 1507 5867 9344 6151 7653 1394 9422 4117 6032 3005 6039 2107 1681 6976 3157 1753 4952 3923 6993 1641 3396 3859 8287 8675 9247 8038 1407 8165 1824 2879 5722 8112 8296 7155 8394 8572 1157 8391 3923 1893 7557 1982 8537 5286 8115 2304 3029 5542 9667 1549 2834 1962 5902 5189 5214 3922 337 7524 923 2094 3254 6499 1503 2691 6582 6995 1418 4204 1943 2178 9858 5910 6803 8050 2149 2949 8885 2739 5300 229 6623 7498 5887 1850 7398 3837 685 3049 7561 2010 4362 9088 8702 9718 2549 6963 7552 8595 9158 2472 8747 6462 8281 659 5864 7766 5764 664 6021 6865 5683 7069 9040 1162 6109 6971 5168 735 750 1126 1351 4589 591 8492 9579 6347 2240 7052 221 2124 2342 4477 359 338 1625 4834 3002 5517 753 8225 4631 909 828 4812 2909 1897 2557 8618 6001 3824 507 9171 4429 5121 5672 2559 7071 3263 4028 1560 5285 7805 3815 2080 1484 4564 7781 4708 481 9840 6424 1526 906 6986 6965 6671 4883 3857 3608 8975 772 6566 907 697 6926 9494 3344 6894 1913 9221 7728 9640 5853 6729 1315 2069 6093 7729 9921 3423 8050 8419 6093 7864 3089 7293 5874 6428 126 1606 2975 \n831\n7817 6565 6142 6795 1491 9714 6409 8244 314 1646 7969 157 4107 2213 1756 4395 8488 6511 9293 1118 2014 6213 4846 6187 2788 8419 2990 4610 5825 3444 7744 2430 7646 6521 4234 1013 9025 7379 96 1436 2927 1121 8793 5345 5600 2632 7040 5636 8341 630 539 1022 4136 9431 2176 4064 2551 8846 3263 4523 3817 7412 3691 3498 8609 8969 7849 9490 2260 9247 672 8710 1207 2971 4070 4302 9461 5929 798 8082 2064 4332 7032 7180 8100 9585 3826 541 2102 8136 3405 7387 9094 8287 2922 1019 4613 4311 2965 3406 9887 441 6342 8833 1261 42 1058 2022 8396 4541 1472 556 6328 6771 5425 497 2805 7480 8599 8844 1490 3556 5890 6516 3368 7758 7291 3717 4676 4970 3750 712 9331 2137 7458 5271 7356 6872 4314 3784 6730 9103 8186 9899 409 1969 9544 2080 7505 2880 94 2299 3204 6438 7829 4678 2364 7848 9284 2561 5960 7675 8424 789 330 6756 505 2106 8985 4377 1492 7405 3631 2141 3940 1280 9996 3439 6895 8669 1270 2867 2509 593 2524 419 7206 8622 7003 9764 1336 3750 8063 8298 6176 2997 6668 6859 1545 3980 7209 7015 4064 2265 898 6145 5404 2757 2188 5262 5804 7695 9216 4541 7760 9924 1985 3326 2518 5228 1330 2109 4980 5905 9007 9731 2423 5517 3380 7751 7883 928 264 7852 1192 638 3534 4146 6943 5526 1935 7558 5935 644 4750 1986 5825 9924 5869 7938 9745 7007 8148 1103 5659 4439 7013 4256 5445 7843 2555 8452 7973 4549 7978 9896 3434 2067 6013 6691 2665 4028 7451 327 4002 5587 9199 3305 6964 8916 7083 8094 8028 1003 7695 3936 8699 6940 8243 8156 376 9223 759 4058 8991 6451 6443 6323 9189 7851 6951 4336 888 5486 9728 4041 4786 2592 1871 4045 3936 470 8872 5048 8557 5824 3874 9423 7114 2613 6145 8670 7791 7088 7004 8854 2281 4999 4483 2630 9329 3636 4689 313 5561 3016 7814 4900 2035 6468 6786 7076 2030 2275 414 702 6012 734 7045 3177 4243 9011 609 3160 5742 6238 368 5335 3651 5670 3114 2317 1423 9335 2041 6446 9705 3285 693 671 6807 4660 8643 9435 5927 4544 3760 193 2111 3698 7490 5660 4584 9781 2944 1789 1282 2855 9453 537 2811 1809 3716 842 6536 8 5175 4264 2709 7517 538 6213 4434 3520 8687 6553 7266 8898 9308 8972 3809 2511 8256 9498 150 6275 6351 6601 4910 2932 4101 4245 3880 1666 3070 2611 7134 5973 3162 6273 9308 1028 8111 258 5537 824 9185 8247 5217 8904 9113 1181 1872 9227 2034 6521 5458 2686 9614 9293 8712 8222 7815 7505 4479 8046 642 6304 6253 7713 2777 6456 2299 7766 9193 9113 4532 9954 368 9159 8061 7983 2887 1275 4902 6459 3080 5183 5686 5154 9918 4152 7465 151 5225 1635 221 613 1568 6051 6400 2716 6371 9233 6454 2275 8377 7717 8652 852 3089 915 9139 7378 9457 7080 845 4392 9681 4959 7663 2297 220 2433 9677 1918 2009 1636 1630 9996 9113 7544 9783 7228 7163 3084 9027 5839 5617 2264 4602 9481 2425 6118 6252 8144 1186 825 1913 6376 8233 3975 9850 5846 4105 1975 6045 7773 7344 2875 9191 7561 5358 8315 4917 516 5134 9947 1124 2091 5910 8578 1994 4669 6231 7386 364 373 133 1448 420 7577 1254 8645 3579 4486 7999 6290 2939 2745 2383 8627 6035 8392 2013 3147 769 6387 7032 7753 724 6295 6194 7509 7674 3762 8948 2873 3391 9402 2203 4785 3715 7730 4352 6659 8307 4715 8886 8326 8289 3379 3429 4967 7637 9452 717 1297 6957 7309 1353 925 1044 7386 4976 3247 5103 6331 8227 3586 7052 7808 8919 4236 5141 878 534 7444 2730 9239 1392 9676 3745 1165 7610 3721 1683 5308 3287 4079 8897 7749 3174 3098 8856 5804 4274 1332 8090 1142 3374 6637 951 4882 8321 3525 7359 3303 7416 4889 3959 3365 7340 3575 4416 984 3734 2412 3092 7114 5271 48 2553 5608 7995 9686 4034 939 9944 919 1910 637 8157 7774 7451 1854 3116 3077 1275 4955 3978 3548 8807 6481 1251 6516 9287 2378 7286 2993 7271 4341 5778 6227 6837 4339 2198 8574 7312 4780 340 3528 5322 7531 8937 7595 7064 1984 1376 3253 5629 1814 6513 7620 6448 7508 9862 2678 277 6976 8342 6098 4278 6696 1405 1544 4577 4798 4648 2236 2931 1050 2263 5446 6805 1380 4303 1499 1219 9596 3813 1909 3080 6703 3753 2536 5512 3035 3542 9803 5312 3622 4264 5547 7600 3707 738 1684 5147 1696 8282 4424 5650 6918 4733 8664 5868 6916 6912 3557 1343 4220 7475 5346 1962 8238 7545 2327 8317 319 2525 6589 784 4536 1762 7055 7487 3619 4682 5320 6029 4305 9043 3368 98 2141 7378 1447 8499 6442 1800 222 8542 8442 8407 1508 6870 860 9216 7058 907 \n83\n6341 3849 7873 5816 4271 9994 814 827 844 3131 2101 6070 5079 3788 5014 2574 8981 7590 7853 4388 1929 1288 6059 4099 4929 2400 366 5230 6977 2029 5517 8847 9184 2120 2347 6487 3768 7359 7794 3640 3968 9157 2817 2954 3871 9588 2835 3721 5928 6892 9175 1492 4319 7084 7966 4755 463 841 52 4965 9296 2028 3858 6753 148 9262 4484 6124 5568 107 2837 4537 9063 9845 2464 3950 2606 4215 8604 4369 821 1941 7776 \n917\nn516\n2662 6203 9367 57 989 4531 7018 7447 4726 7764 6411 1159 9612 5409 2947 1911 4662 5161 679 3041 936 9479 2367 4952 153 772 1317 2231 5567 7869 9377 1757 4757 555 514 7671 4411 8479 6433 4500 8100 6049 339 8305 2282 5999 8598 4490 9104 4291 4535 3222 7709 1073 4619 8644 5000 2986 5586 9398 1956 6203 8018 5299 4971 2288 2175 8131 3049 2425 8266 710 8766 8442 105 9026 6644 7998 1315 7999 983 9639 1666 3040 1693 295 8502 7944 4797 7222 9820 1892 9684 6085 3228 3612 6871 2599 5135 1680 1091 6374 3392 4319 3190 4907 640 3605 678 7513 8630 7654 6027 7555 9675 7099 6648 2743 9958 7940 9921 3482 4310 8709 8280 8980 5722 7025 9309 4026 5845 5752 2645 6871 6271 8519 4681 3898 9646 6314 8364 7420 8795 6137 982 9602 9700 2153 326 3007 3484 7477 7447 7642 1002 9222 6992 6390 7802 8358 9093 193 810 5600 9732 6567 1288 7352 4420 108 881 6049 1597 1755 1917 5859 1682 1963 9522 3360 3608 9990 6982 9792 1577 328 729 5083 369 7319 6328 4233 1442 8399 8991 7661 2751 2441 5371 618 3863 3948 6749 7679 9985 7258 3714 3326 6270 6377 1754 2580 6814 7875 8466 3186 4722 1294 3944 750 868 862 7731 9133 537 7146 4512 4146 7216 897 6854 6289 7526 7195 1486 9449 449 9573 9786 7500 228 1660 7251 4287 371 556 3233 7353 539 8473 3823 5619 4679 5689 6354 7779 112 5465 4735 1718 9674 377 9164 8922 379 4048 6015 3491 2151 6772 5413 5802 5432 5697 4341 6974 8805 7248 7726 1690 3048 2265 5039 2208 3946 4464 3806 6642 7025 7930 2291 3189 4824 1050 2 7693 1834 6772 5325 1412 4997 2417 2668 3024 9207 7097 6329 8112 6830 7759 2198 9527 1014 1654 3153 9410 7125 4998 3527 5468 3087 1531 834 9303 1923 3917 7407 8919 8548 5185 7881 9542 4693 8877 1026 591 1922 3605 3824 7050 2780 3671 6947 3947 879 9719 9886 2684 5083 9279 5355 5818 9816 4583 7481 3036 2456 334 1350 1580 951 2319 7067 702 3444 6315 8941 1385 9698 6403 1133 1185 506 6129 6470 2540 7611 5257 3668 9084 7168 5614 9658 4275 1924 2032 8238 3141 975 3296 7377 1098 162 9780 7769 2620 2951 840 5652 7742 4010 5431 6833 4412 3822 3817 8852 722 9201 3772 8974 6877 8412 5872 2128 353 9789 9540 2919 2816 544 6432 2770 2263 7079 8169 8688 6214 1801 1312 6565 7116 2487 7484 5428 3672 3262 5198 8984 145 2484 928 7124 327 2758 7502 5668 729 2149 9754 9899 847 272 7242 2664 240 2218 1055 1288 5815 8494 1707 7180 7769 7954 1405 9106 5255 9473 7618 9391 4264 2732 7388 1694 8237 5164 3017 4433 323 2301 668 3126 1193 3261 1719 1569 7512 9361 528 2703 4945 3140 4480 7500 8749 6899 3797 27 8518 3423 6506 1445 9221 9233 4460 1151 8503 3277 946 780 468 2898 9933 9559 3124 \n300\n9464 1331 2808 5113 1867 9465 7744 9685 2811 5995 3463 4686 559 7412 9995 2843 3247 4508 4989 5503 3154 5577 4938 8471 1591 6478 5110 2702 6705 2683 1408 4554 6524 3560 941 7212 297 9076 86 9038 8545 3877 4311 8337 4978 6971 4853 7446 181 7291 4393 8208 4516 8572 7287 1450 4239 3247 4897 7785 5659 3514 4711 632 8562 9392 7986 3446 5746 1600 4647 2980 2806 6537 7285 9059 2540 9485 1556 9889 1749 4335 5497 290 9186 4828 8004 9550 6445 6222 4529 9442 8615 4944 5271 9443 7187 7032 764 3824 6259 9034 9407 4635 9309 8936 1361 6367 6361 3439 1458 8154 9449 7885 3225 7196 9804 272 8104 9000 9297 9882 1225 6734 9248 5379 9139 1411 5390 2131 2042 5590 3264 7557 3999 4627 1660 7325 5429 8722 16 7985 4103 5172 1277 6210 1664 7472 8869 8447 7722 2318 5014 2164 2561 6763 2175 5437 5062 2482 7687 7725 7871 1803 8021 2625 6668 5120 3991 3382 3572 4760 96 1858 3560 1275 6243 3923 141 5791 9268 3646 7543 5952 6864 8934 1644 8549 5463 6899 4516 8207 7821 9030 5713 6956 7387 8931 3237 2182 8290 2819 7806 7068 2902 2632 3500 2925 2661 3272 1728 4443 8411 2887 4183 4787 7726 6580 3305 657 1018 522 0 4087 180 5202 9466 980 4283 7281 8725 3509 3554 4630 7300 7351 3791 8624 9510 2158 650 4074 4514 6749 625 5295 7627 9943 3266 3382 6159 2614 972 2961 4404 3330 2898 6307 1012 8933 4918 5783 5611 9084 6556 5930 9506 7278 8840 5840 6717 6617 4989 7244 6956 5026 3728 9221 5446 5957 4350 9917 8352 5365 7948 840 5410 5596 7368 22 6349 5822 3740 2502 3731 1494 9048 2961 1079 401 \n615\n9959 8409 3755 8106 4583 2580 1544 481 2899 5031 1820 3453 8345 8092 3768 8959 840 116 9295 9523 9346 7841 7395 9743 3880 2045 2995 2057 4655 6942 6150 5830 5885 6773 9913 6533 5137 4601 7977 4816 2973 170 8079 65 1195 3078 1410 9758 4976 2755 6975 9516 7652 27 5651 6362 2757 820 5915 7448 1148 3571 4619 9340 3309 1133 9170 7874 7970 8623 3946 9040 4232 8257 9496 5538 129 1547 9986 5066 7879 1626 2031 3061 8207 203 4587 7295 4174 2663 2655 7245 5823 9567 1390 7461 8039 4368 3934 371 6034 3784 2786 1502 3773 769 9350 6259 1727 5758 3027 7469 3484 4297 1709 622 9278 9017 754 4777 4382 3965 329 8124 9852 7673 6050 4161 892 5144 7346 5601 8284 3396 7346 3479 1098 3499 192 1368 6612 333 8568 8050 2641 5018 325 3135 5604 4510 1893 7721 973 3902 7836 6654 1690 2749 106 8592 1317 3258 1565 1024 5093 4475 6032 4258 7478 7180 6589 447 9741 8483 8777 1363 9782 1563 3807 8140 5222 6944 5344 7202 1925 5637 9220 2037 3920 415 9043 2283 4087 9182 6181 8526 2915 39 4602 3284 3693 8594 200 7777 8208 8248 7734 4169 7985 6413 3044 8299 4295 8440 2611 3055 7993 4362 5179 761 1966 9453 1442 9854 5999 2345 6898 2494 5682 1909 9177 4714 9129 1625 5650 1714 1858 6799 3 3237 2481 449 9266 8697 7755 5801 5414 5049 5475 4559 1305 7440 2086 2871 2442 2134 8138 5720 543 4936 4091 9627 5050 7803 6349 1933 4329 5654 2173 2822 7442 4332 4108 6165 5499 2623 5294 2608 3625 2062 5207 7579 1624 124 79 4342 4925 8338 244 718 7095 7715 894 6805 5687 700 6812 3892 7076 70 7350 3410 1968 7592 509 4833 5962 6191 16 1220 8701 6854 4524 395 11 863 5856 8411 8858 5168 108 6666 3747 6573 8360 4998 1084 9040 9493 8356 6106 2059 1769 8564 1533 4185 6233 1863 4495 2026 1849 1227 4682 8594 6052 5089 5018 9372 586 9449 4622 3956 9160 5791 1782 6605 554 4300 3869 2563 697 1329 4116 7046 3638 1935 2608 2689 7854 904 5291 3575 3845 4607 299 6232 2897 387 7357 604 4628 4172 5673 5083 1748 6266 2290 8783 8377 5108 5349 9855 8241 8298 6226 9175 8518 1550 878 5109 9988 9518 3104 3790 710 3095 2404 3502 6321 6545 8830 9976 5861 176 4838 6728 3150 5060 7232 1128 6617 2278 3034 7546 8758 9783 8719 9406 8971 9895 4193 6341 5938 11 3562 8643 764 8696 5867 4137 1935 7171 6597 4280 4718 9105 8296 4643 6776 4179 1742 2849 5263 6658 7408 9201 4001 4120 3073 4637 3790 3926 5222 8558 5390 6912 5919 4429 3061 2817 2890 7234 5135 184 7988 8279 2049 6716 3254 7788 3754 2357 967 8089 8735 7758 4846 7771 1915 1289 9514 8184 8190 2137 5505 3030 3164 4970 540 4538 3517 2951 6666 1752 1990 4695 230 7125 803 2062 1632 9150 3907 6551 2475 2632 7804 6346 5016 5111 3448 7251 8056 9862 5619 786 4936 5312 8324 8257 7848 927 6314 4780 4485 8816 7307 6777 7228 748 1113 8773 8449 2789 9720 8301 1250 7505 3801 1055 94 637 9286 7950 6545 4861 2316 6816 4048 7809 8753 6692 9005 3703 8636 5333 4132 8139 8583 6262 2855 5265 7331 2388 7977 4199 7336 2467 7862 3042 9668 2006 6879 8293 2681 8392 9443 5269 8874 4268 6235 6981 6439 5612 3208 7068 4891 8956 5388 9140 931 9168 4359 5319 9210 5136 8618 8355 9132 3982 4419 8498 3811 8144 505 \n528\n9441 8154 4463 9403 2020 6111 669 8130 323 544 5737 2343 8943 2101 4902 9478 2803 9796 5694 2581 218 1842 9676 9447 2062 4042 2166 1326 397 2578 188 9770 5388 2155 3736 6197 3714 242 3182 3205 3413 2154 5303 8618 2343 4170 6000 8642 291 5157 6966 6832 899 7418 3254 5196 8794 3211 3719 5362 8103 9266 1985 4778 2607 9540 5340 3796 8440 6896 4005 7607 4324 9165 5117 4499 5428 7263 7243 5284 4296 7117 5795 4860 9801 8280 6496 8775 8985 660 2789 337 5573 506 141 9261 541 2464 2991 1315 2662 1187 4390 4683 2264 1553 476 9737 1574 6183 3805 2028 2327 9567 1569 4124 6524 9017 8351 5597 4917 911 1096 3748 7808 6363 7300 6681 6212 6629 7907 9521 3865 1525 6733 2603 6438 450 9887 6828 7583 7358 7705 5309 3331 7092 2679 5081 9089 9573 4984 7692 7646 9142 3866 9301 6522 272 4400 5663 6699 7556 5439 2810 2505 6448 1658 9950 9861 8265 8842 5150 9456 5306 4784 6698 5005 1667 6842 6233 4239 5733 2032 9300 9281 9989 2987 3707 6664 139 308 2280 5887 6454 6919 7263 3235 2199 6148 8261 6948 4744 9425 1969 422 6758 1202 7627 6014 548 7029 4301 5192 9380 46 7451 3641 7813 8345 6520 970 591 7483 958 7800 6173 1517 753 8745 6948 4879 4228 4603 1182 7343 2673 1986 822 4736 1576 2189 3297 21 1272 9491 2732 8845 4949 6194 5499 9843 3588 9326 3715 8996 8367 3932 3604 7655 4143 6751 2345 7108 6322 4280 218 5586 261 7810 6061 7741 7395 4138 4667 5005 9466 5349 4340 1301 3732 5100 3489 8437 3833 9633 6508 6635 3943 8298 6663 1901 4462 930 6711 2566 4466 821 8698 978 2246 355 7222 7428 1829 5839 3610 1351 9223 1030 9911 7532 4158 4388 8111 5618 3568 2889 6291 5456 6375 2491 924 4632 26 3656 143 4752 4152 7659 731 1739 6123 9708 8959 5284 3139 9481 864 5226 5775 709 5766 519 8348 7462 9497 7623 7468 9671 4581 3982 3150 8718 6886 5635 7145 6416 2998 6252 4486 5956 4565 180 5335 6386 8787 6437 2657 3392 8859 4439 693 6570 6167 5221 9665 9636 6687 7240 3782 9663 2988 3134 1252 9524 1045 6512 676 9289 9785 6750 6035 6233 4015 5870 4655 794 1291 7084 7121 7431 3143 4209 7224 326 8844 337 1685 612 4094 9763 3795 4579 3308 287 2328 8600 1348 426 3502 6922 4993 2612 6035 5079 2143 7802 2751 1327 6807 3690 3811 5651 688 6531 7953 8754 6250 8690 8656 3618 7125 3383 2811 1449 4626 7008 9508 6614 1638 9161 3509 2040 5304 2528 9803 1088 9603 3671 3273 8740 8427 8485 4658 76 8206 7065 1672 2217 6360 5552 8561 6823 9625 2353 5686 2729 7596 7639 8067 7453 4913 570 6593 8310 7673 4467 1763 4918 3784 6898 7318 6996 9988 5620 3127 2092 3198 427 3536 7547 7263 5046 1861 5128 8792 2522 6457 4534 1520 7696 6386 6657 5415 4806 5447 5878 6772 7606 7214 4461 106 6281 3444 9024 2963 108 475 \n",
	output: "79\n47\n50\n50\n159\n8\n29\n16\n14\n47\n"
},
{
	i: 1,
	input: "10\n26 15\n44 57 79 99 60 3 80 95 84 93 48 16 46 36 31 51 77 23 74 99 60 52 93 15 32 90 \n49 14\n24 77 19 19 21 10 15 11 94 30 32 22 71 36 50 70 2 47 61 16 44 13 90 96 78 62 67 23 92 14 19 68 32 99 42 6 89 53 32 18 4 18 56 54 92 13 54 61 47 \n12 1\n24 16 50 71 91 54 27 0 16 75 16 31 \n29 13\n32 4 1 22 37 15 67 59 71 39 80 33 81 15 18 2 78 68 5 31 36 96 10 6 74 10 71 71 30 \n47 12\n75 26 75 5 9 83 14 41 23 97 9 31 12 92 8 87 13 13 16 47 14 57 12 82 31 90 10 88 50 15 49 10 55 36 42 52 72 52 36 40 68 88 67 13 32 55 58 \n4 3\n25 59 57 65 \n10 3\n85 37 61 45 17 47 63 16 95 60 \n37 13\n89 86 12 20 3 77 57 30 1 43 66 4 61 73 13 42 3 61 85 45 57 42 92 33 25 63 3 59 80 88 69 36 44 6 34 70 89 \n35 7\n22 72 49 14 55 77 2 24 4 40 43 39 11 15 67 63 89 39 3 84 34 92 79 86 50 5 45 98 55 53 2 74 90 13 76 \n12 21\n63 95 8 23 87 16 44 49 69 93 61 32 \n",
	output: "NO\nYES\nYES\nYES\nYES\nNO\nNO\nYES\nYES\nNO\n"
},
{
	i: 2,
	input: "10\n210 78238 2\n174\n96\n240 32734 3\n180\n180\n200\n932 285542 4\n181\n891\n333\n504\n491 87 3\n349\n461\n102\n524 25841 4\n322\n199\n171\n282\n273 255227 4\n131\n242\n141\n133\n237 38954 4\n98\n92\n72\n86\n44 85237 2\n2\n5\n484 379866 4\n477\n66\n328\n482\n577 159309 2\n237\n496\n",
	output: "66506\n4938\n20202\n20202\n5018\n99440\n264072\n12976\n162624\n0\n0\n0\n17910\n15672\n12662\n23973\n0\n5054\n0\n0\n9826\n22318\n14346\n37736\n71602\n72443\n298440\n377910\n244812\n164286\n0\n0\n"
},
{
	i: 3,
	input: "15\n12\n< 87 No\n< 66 No\n> 55 Yes\n< 47 No\n< 41 No\n< 69 No\n< 2 No\n> 21 Yes\n< 87 Yes\n< 23 No\n< 60 No\n< 22 No\n9\n< 48 Yes\n< 84 Yes\n> 29 Yes\n< 93 Yes\n< 13 No\n< 88 Yes\n< 80 No\n< 41 No\n> 23 Yes\n2\n< 75 No\n< 76 Yes\n4\n> 11 Yes\n< 48 No\n< 83 Yes\n> 35 Yes\n13\n< 75 Yes\n< 82 Yes\n< 92 Yes\n< 74 Yes\n> 33 Yes\n< 90 Yes\n< 95 Yes\n< 87 Yes\n< 42 No\n> 25 Yes\n> 55 Yes\n< 20 No\n> 45 Yes\n12\n< 96 Yes\n< 8 No\n> 22 Yes\n< 68 No\n< 2 No\n< 52 No\n> 10 Yes\n< 82 No\n< 89 Yes\n< 91 No\n< 81 Yes\n< 81 No\n14\n< 96 No\n< 92 No\n< 38 No\n< 32 Yes\n< 84 No\n< 25 Yes\n< 97 No\n< 40 Yes\n< 52 Yes\n< 94 Yes\n< 5 No\n< 76 Yes\n< 98 No\n< 17 Yes\n7\n< 60 No\n= 0 No\n< 33 Yes\n< 58 No\n< 96 Yes\n< 73 Yes\n< 73 Yes\n10\n< 27 Yes\n< 63 No\n< 25 No\n< 63 Yes\n< 35 Yes\n< 4 No\n< 45 No\n< 99 Yes\n< 98 No\n< 64 No\n6\n> 22 Yes\n> 52 Yes\n< 26 No\n> 41 Yes\n> 10 Yes\n< 92 Yes\n18\n< 14 No\n< 28 No\n< 76 No\n< 47 Yes\n< 21 No\n< 32 No\n< 66 Yes\n< 33 Yes\n< 95 Yes\n< 85 Yes\n< 65 No\n< 85 No\n< 74 Yes\n< 93 Yes\n< 73 Yes\n< 26 Yes\n< 17 Yes\n< 16 No\n11\n< 7 No\n< 57 Yes\n< 14 No\n< 86 No\n< 90 Yes\n> 16 Yes\n< 98 Yes\n< 73 No\n> 0 Yes\n< 74 Yes\n< 65 Yes\n2\n< 81 Yes\n< 75 Yes\n16\n< 80 No\n< 37 No\n= 99 Yes\n< 55 No\n< 76 No\n> 88 Yes\n> 86 Yes\n> 13 Yes\n< 13 No\n> 5 Yes\n> 57 Yes\n> 17 Yes\n> 2 Yes\n< 75 No\n> 9 Yes\n> 44 Yes\n15\n< 72 Yes\n< 10 No\n< 29 Yes\n< 13 Yes\n< 0 No\n< 29 No\n< 47 Yes\n< 39 No\n< 51 No\n< 67 Yes\n< 91 No\n< 60 Yes\n< 10 No\n< 1 No\n< 26 No\n",
	output: "1\n1\n0\n0\n0\n2\n6\n1\n3\n0\n5\n2\n0\n0\n4\n"
},
{
	i: 4,
	input: "100\n7699\n681\n9790\n981\n8777\n61\n3949\n991\n8833\n121\n893\n271\n2713\n291\n3718\n471\n9895\n471\n9664\n451\n4077\n581\n4172\n771\n9050\n261\n5797\n881\n9584\n741\n8681\n781\n5474\n191\n8820\n921\n4482\n991\n2454\n51\n2771\n741\n2665\n311\n8098\n1\n204\n351\n6102\n991\n2423\n731\n2859\n251\n9139\n671\n3485\n251\n2878\n251\n9921\n91\n7838\n101\n9341\n351\n4897\n561\n384\n241\n729\n21\n7977\n641\n4672\n491\n6707\n131\n538\n901\n734\n841\n8600\n591\n8988\n181\n6702\n281\n5522\n601\n2156\n121\n5797\n841\n7482\n531\n3287\n21\n6503\n211\n",
	output: "YES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\n"
},
{
	i: 5,
	input: "50\n89\n27 73 86 84 7 30 81 26 31 66 60 70 70 84 77 102 42 41 74 22 10 82 6 13 7 42 66 32 24 9 28 92 42 13 70 74 32 69 59 22 12 85 55 100 86 13 6 97 37 89 58 87 91 102 13 5 5 82 76 83 8 104 66 58 38 45 68 49 99 76 45 41 15 57 82 92 67 47 64 58 87 50 96 84 59 34 32 78 53 \n22\n51 74 75 16 45 80 10 19 8 56 65 36 47 95 15 87 54 10 67 99 75 28 \n76\n37 11 58 26 31 88 51 73 51 26 85 44 65 45 22 25 23 32 47 26 88 37 73 41 31 10 56 21 85 56 62 65 86 7 83 30 69 79 12 63 76 49 14 91 57 94 100 17 93 27 10 29 76 52 30 84 48 30 19 76 48 71 93 27 72 46 45 75 10 89 49 49 23 52 32 19 \n53\n41 64 43 21 32 19 11 52 45 17 48 69 89 21 97 96 70 79 59 6 93 50 37 38 58 43 101 90 61 42 86 30 18 33 38 62 98 48 15 20 50 49 34 94 17 87 45 68 26 35 34 94 63 \n59\n79 59 30 26 13 5 86 62 45 48 76 101 7 16 102 5 94 26 58 90 52 83 88 62 6 7 93 18 83 40 70 42 71 99 100 52 24 30 16 56 63 99 84 38 82 97 63 67 80 94 9 32 22 52 93 12 26 83 44 \n22\n81 98 100 47 66 42 68 96 11 20 13 6 57 28 5 7 52 87 51 27 100 64 \n43\n51 55 76 89 31 56 40 76 76 27 21 12 16 71 89 57 41 18 104 43 54 85 11 96 58 88 85 25 61 36 38 81 73 96 65 74 86 32 86 99 84 96 33 \n75\n48 101 16 53 93 61 7 12 8 24 103 56 81 93 56 94 69 87 101 79 56 77 67 60 15 80 82 21 74 27 36 56 89 79 19 5 33 49 77 81 35 64 49 6 38 25 79 21 80 23 41 17 101 52 101 59 100 5 69 27 102 31 89 53 76 62 64 49 85 75 69 17 28 14 36 \n83\n24 16 36 19 72 14 37 7 62 62 22 78 27 11 87 78 59 63 75 43 27 42 22 16 86 7 99 19 91 91 99 77 99 49 58 61 83 52 90 68 52 52 68 92 60 30 24 43 66 80 35 6 96 13 86 103 27 34 7 97 50 12 30 80 58 15 98 38 52 45 49 83 101 25 104 97 16 56 40 46 36 61 9 \n32\n38 74 76 66 46 56 71 32 99 37 66 94 53 5 25 87 31 67 15 35 100 25 84 27 54 43 33 30 56 87 67 70 \n78\n58 18 28 64 18 68 35 40 79 86 33 9 54 100 85 37 11 19 29 79 70 72 95 63 5 13 6 85 40 102 54 24 61 83 8 24 95 84 60 70 74 91 96 67 69 88 49 49 42 12 93 53 69 72 46 50 30 60 51 39 20 30 31 73 30 66 92 41 100 94 55 5 40 104 36 42 49 46 \n40\n73 14 66 77 8 104 38 65 72 78 74 57 98 13 80 26 52 16 68 48 6 92 9 46 71 41 7 43 8 69 7 40 45 79 102 49 14 84 48 41 \n76\n45 33 75 20 38 19 100 13 103 47 73 102 7 88 14 7 57 78 85 16 88 85 99 45 99 25 29 9 49 64 99 79 19 10 41 13 67 55 46 73 70 58 14 83 52 12 42 78 14 84 13 72 87 17 37 62 99 85 26 30 22 87 93 100 98 55 40 55 35 5 26 62 22 26 31 74 \n30\n38 21 19 72 65 61 80 88 87 55 65 42 25 10 37 104 92 88 30 48 55 75 43 20 69 30 14 58 95 41 \n21\n70 46 47 30 17 85 94 85 73 99 5 63 90 45 13 14 14 104 102 83 75 \n18\n61 54 94 101 31 97 15 63 73 72 82 55 59 58 38 47 44 71 \n50\n24 80 71 14 23 27 17 47 24 77 101 33 55 14 11 78 30 48 98 76 94 18 104 76 100 95 95 88 98 55 90 74 19 66 42 28 81 23 67 83 78 63 24 28 54 91 91 94 100 67 \n80\n49 58 9 34 17 46 28 38 42 56 69 40 96 44 62 90 56 10 34 17 53 27 11 59 5 52 87 18 26 69 49 67 19 86 104 71 18 72 60 58 12 85 99 8 18 60 57 11 25 52 32 84 54 5 75 99 35 39 30 72 14 45 68 65 7 20 103 8 40 19 102 102 62 35 20 54 81 8 88 89 \n104\n104 59 34 13 29 40 70 78 32 73 103 43 53 47 77 80 100 56 86 100 18 56 19 43 48 81 71 71 28 60 38 50 90 32 92 58 81 83 12 74 94 49 17 11 22 67 82 99 37 103 50 14 48 29 42 6 99 64 71 32 72 87 24 16 14 17 60 57 11 102 23 57 5 99 52 37 78 54 81 66 89 104 88 88 104 48 52 70 11 50 85 67 58 40 97 103 22 53 73 30 56 66 55 59 \n94\n13 63 104 30 65 65 78 24 75 51 91 52 88 25 45 94 76 56 67 47 92 64 31 95 10 33 95 65 23 99 34 73 89 96 65 7 56 8 78 24 21 11 17 23 9 89 11 51 52 24 39 71 15 22 40 43 24 14 36 67 58 91 62 34 55 14 18 52 28 84 11 31 9 82 82 93 13 49 32 96 59 62 61 63 73 21 43 97 53 26 63 103 57 28 \n15\n53 43 11 44 37 59 47 57 94 66 75 6 35 9 64 \n18\n83 27 9 9 46 87 67 89 90 33 102 29 15 89 57 16 75 10 \n30\n62 44 16 60 43 76 57 48 49 19 44 34 8 85 54 80 78 54 89 5 56 91 24 25 18 96 83 13 35 94 \n83\n51 39 41 42 17 83 94 85 88 43 96 93 22 74 86 67 34 74 103 102 7 69 51 70 10 32 101 92 37 30 45 6 45 45 83 55 44 45 81 82 96 10 44 103 58 24 90 11 76 102 16 40 84 83 6 67 32 72 66 75 69 21 15 51 60 100 48 7 60 63 81 32 92 43 101 40 95 95 89 74 70 12 32 \n82\n64 64 60 63 36 48 44 97 82 47 24 44 59 5 52 34 58 5 23 7 92 40 25 26 25 101 77 79 69 66 69 47 17 101 102 46 63 18 10 57 28 44 84 68 43 68 10 100 69 42 94 54 102 86 42 24 45 6 8 49 72 95 96 92 89 12 15 51 6 69 15 43 34 52 97 36 21 52 30 68 71 64 \n53\n33 54 31 73 87 103 40 49 78 75 34 52 101 82 15 33 86 28 77 100 36 31 90 98 80 17 88 54 79 66 72 81 28 19 48 15 82 56 26 28 82 89 87 37 83 14 25 67 38 71 5 62 45 \n46\n19 32 51 20 49 55 22 104 98 7 95 93 75 91 72 93 10 85 104 62 35 57 47 69 39 53 104 67 60 67 45 86 35 40 78 79 92 79 5 26 6 39 98 58 81 49 \n82\n74 99 64 102 71 74 31 51 77 31 10 92 48 90 91 25 63 88 55 49 94 7 12 50 83 83 26 92 76 60 85 53 90 97 18 5 21 88 80 26 63 77 27 29 11 71 44 39 88 21 40 98 35 69 66 51 42 85 62 57 70 11 43 9 100 87 94 91 55 83 56 26 47 51 76 30 20 97 104 99 12 41 \n69\n59 42 43 35 17 16 38 66 72 90 52 69 15 61 10 82 84 76 10 61 17 93 53 52 100 48 74 22 19 45 77 14 34 69 12 69 49 26 7 51 72 94 28 65 50 66 70 92 60 38 53 75 63 46 80 104 46 61 100 93 67 89 55 24 71 95 70 71 23 \n84\n81 68 94 35 97 25 38 63 27 17 84 61 37 57 22 27 38 80 31 71 37 26 11 15 101 66 34 25 78 57 78 95 29 11 78 69 82 35 79 97 73 11 92 20 47 65 93 45 59 51 54 88 47 5 66 27 46 63 44 23 64 68 22 60 48 9 84 54 19 15 65 60 25 104 88 80 21 71 97 46 67 100 30 83 \n19\n31 10 64 96 5 72 51 28 53 92 41 60 23 85 47 94 54 88 49 \n7\n93 43 99 26 83 65 38 \n79\n58 36 73 49 58 75 27 53 79 101 33 103 56 65 62 101 8 16 72 80 78 48 43 99 87 78 54 86 52 10 15 11 39 95 6 77 91 76 60 67 51 31 80 86 65 86 75 35 88 45 96 47 91 92 12 27 37 62 60 45 102 73 17 73 38 21 30 33 26 26 103 83 66 35 63 41 104 29 94 \n85\n61 95 45 6 103 61 91 99 38 42 62 21 14 46 104 81 55 90 6 19 23 78 92 7 92 49 80 76 44 38 98 77 10 6 42 76 64 36 56 94 43 88 102 8 68 58 77 42 38 5 82 15 20 28 87 81 100 40 59 96 52 63 16 47 73 28 16 43 39 40 95 32 78 5 51 41 59 60 21 67 61 81 46 16 83 \n54\n23 42 50 104 67 30 45 11 64 28 58 21 33 6 13 91 70 36 17 39 9 92 71 103 72 99 95 31 74 66 29 75 21 96 25 60 61 40 80 98 98 81 37 92 8 36 70 59 32 42 93 57 88 24 \n97\n45 48 63 66 62 9 104 36 44 79 45 100 58 84 84 83 94 72 8 13 51 83 44 98 31 5 91 34 98 78 47 99 77 32 82 36 88 15 87 8 70 8 67 85 81 50 31 68 96 20 13 54 5 11 104 58 30 69 80 57 71 91 23 63 94 66 68 83 90 78 96 45 43 89 54 79 70 80 39 36 9 45 66 104 95 23 82 44 58 45 101 100 103 67 42 98 55 \n22\n29 51 52 34 54 60 90 11 70 79 54 24 18 87 78 91 41 104 41 25 73 9 \n69\n23 63 61 46 15 97 37 43 72 59 61 84 21 90 26 56 72 5 59 13 99 37 35 27 74 72 88 63 68 95 68 102 54 50 32 31 31 51 92 73 54 18 16 46 7 31 52 6 101 94 27 14 104 43 14 30 11 7 39 75 70 57 86 91 15 29 11 86 10 \n79\n103 91 21 35 88 90 12 103 29 94 40 87 58 99 74 86 74 61 41 41 50 39 52 64 37 47 20 42 15 19 99 47 99 56 70 96 9 28 100 33 24 96 53 20 54 47 81 42 96 69 55 41 75 73 82 93 51 84 61 75 80 12 33 96 66 52 48 98 22 95 31 28 103 12 74 89 94 67 63 \n33\n76 82 66 47 46 54 65 50 9 48 38 57 77 81 35 95 82 49 12 12 81 88 68 62 96 50 24 34 63 17 81 68 99 \n28\n61 65 17 9 31 43 38 5 75 58 61 96 35 13 50 75 68 16 82 83 57 28 46 87 24 67 87 51 \n22\n9 31 79 41 30 23 98 39 21 87 102 104 9 38 15 8 7 82 93 10 91 102 \n6\n29 38 73 25 19 68 \n82\n57 17 84 43 52 42 14 41 76 55 55 86 57 8 8 82 101 39 79 81 38 85 98 84 80 85 64 87 92 71 85 98 82 52 70 21 19 66 39 61 32 60 47 53 22 24 93 17 79 29 28 32 59 35 89 67 68 98 46 86 81 58 71 67 59 38 66 91 93 87 88 63 87 31 24 11 70 84 101 93 16 60 \n102\n89 50 20 48 34 102 90 21 75 23 6 77 95 102 80 19 92 61 8 76 92 12 5 93 16 51 55 75 24 48 52 37 59 35 24 70 77 44 7 58 62 59 5 103 90 30 27 38 62 68 9 65 98 62 66 51 9 85 38 82 86 22 91 24 96 75 76 88 72 82 31 54 104 97 86 61 46 39 85 28 82 88 39 7 23 56 59 28 70 73 20 7 30 57 74 85 85 101 93 95 62 86 \n91\n12 28 62 40 88 39 88 20 59 45 38 36 35 91 76 7 79 59 91 7 31 103 28 28 22 95 74 93 32 55 32 18 49 47 60 76 74 13 66 8 94 45 61 47 91 19 87 29 11 46 53 33 78 9 77 29 11 30 51 57 78 86 22 6 20 70 33 20 57 9 103 40 39 11 16 19 22 37 85 54 22 89 63 73 89 101 7 70 6 81 20 \n7\n34 34 31 102 79 48 79 \n51\n96 44 17 61 92 52 49 61 79 52 27 11 69 16 75 77 74 95 29 82 79 99 35 57 43 17 56 84 48 56 9 80 9 63 30 47 97 9 95 47 12 44 31 104 46 48 81 35 99 12 65 \n89\n44 33 71 82 86 96 97 99 20 9 102 78 48 13 50 58 36 47 54 58 73 43 15 97 9 22 26 50 43 70 40 48 69 87 30 19 21 74 44 59 6 49 20 63 20 57 69 74 59 69 77 67 54 15 67 14 102 40 45 98 10 87 47 14 9 36 59 40 9 75 60 71 5 43 8 14 85 98 53 78 19 28 16 84 27 69 65 103 12 \n7\n33 97 87 60 51 40 62 \n",
	output: "440\n168\n525\n312\n290\n105\n462\n370\n492\n155\n385\n234\n375\n290\n100\n255\n539\n395\n515\n651\n84\n153\n145\n492\n405\n260\n225\n405\n476\n415\n90\n156\n468\n420\n318\n480\n189\n340\n702\n288\n135\n147\n95\n648\n505\n540\n186\n450\n440\n198\n"
},
{
	i: 6,
	input: "100\n6863\n5990\n4327\n3437\n3602\n1863\n7142\n2499\n9508\n5950\n8970\n5583\n5894\n8533\n5629\n5032\n7786\n2537\n5112\n6808\n2739\n5314\n1281\n3278\n196\n8335\n6541\n4220\n671\n8384\n4487\n7814\n8692\n3144\n5824\n2475\n6963\n9277\n6954\n6668\n5285\n9823\n1651\n6014\n7839\n7541\n5409\n6904\n1047\n4928\n4930\n2259\n9721\n6629\n6691\n641\n3731\n2721\n6596\n9209\n4933\n853\n528\n9289\n7066\n7662\n5113\n8908\n6113\n5006\n5556\n9636\n3346\n3292\n6137\n5617\n9670\n7928\n6892\n1479\n2852\n9913\n3245\n4766\n10\n8252\n9688\n463\n7904\n8207\n7723\n9092\n3880\n9186\n4304\n6092\n7310\n740\n682\n3743\n",
	output: "1\n9000\n1\n3437\n3602\n1361\n7142\n2499\n2064\n0000\n0000\n5583\n6984\n5437\n5629\n8368\n3656\n2537\n7088\n1552\n9419\n5314\n1041\n0952\n3504\n8335\n6541\n0000\n671\n6816\n4487\n7814\n3232\n4864\n8224\n0625\n8347\n1\n6784\n2224\n4125\n4767\n1651\n0744\n3199\n1\n7281\n1264\n1047\n6848\n0000\n3081\n1\n6629\n1\n1\n6891\n2721\n6976\n1\n1\n1\n5408\n9289\n7066\n1528\n1\n4768\n1\n5006\n1776\n2736\n5736\n7264\n2769\n5617\n3000\n2752\n9664\n5239\n8032\n9913\n1125\n4766\n10\n5504\n1792\n1\n8704\n8207\n1\n4464\n0000\n6856\n1056\n2464\n0000\n0000\n4568\n3743\n"
},
{
	i: 7,
	input: "779821991555610200387693791028403175229105088785281552563784518551697908995352606807248499809629324049157079187242883344384067339056945095438000950109612011179471692955631288736734298993819035077875217996933789986608893736636054157141449701175516219020843076179165547381565254183552246555367098105531546640502248980362793915503393204639054873603993509573211658243481392376457570269339447962974891320122752846470898611371399585183929403946914585991940870865022071247114467546633473533351938048432867257873889151631794365182996753740228347045421212178500439493077536109648077679799567660367765275032476348270650158419266134034399512793957173182461104575863264046376468792371159803597087760068648310162155734768240798080572797327087952111964212669897283475004083700751586074039460212266227709830483003985623466884804637433330295282110469059368275935964181426670343674183567714857912921362996134940727456140077162510473522006071820878425479713833107093044354043126904113573257130161788214439310611648801488901075108731884223910287683112502487647450431788034535024170560818492656569720862830900330434065523011088939616819824706181074349371202577972067195345635197870076363179586208722878138462165665494610065120564663615746345741736402267096663613151850285488858898213482340080065630654001572941477155494951132170221078364757273380781952695167076016841058565700185683496948491200078567525095215837740465791146788180988757916205211029177160180591303156367660684178847708937886012000113493538414373334705897449623058199910018173945826246198457033907736648699759417061823685346208824047266086343000267222070636902155215524007987819629624506037695671741142998244781315311802139744822769550276463070543772870813808397585702021086921507987121359614143159375082516556707241246389440536623591793371684275891185249006261260164946278617005213577901771656871017109529440527868459002133338846098583616576007789092415983860077147659164037904975896578692505808688829073511028833815829880310179798867934979009677442833149106413517597702105817375603428693442413814983008687064398509498353244840123581024965242054377053403531141618675866306888240247601779049091603516126758813301695306377144820404679336404515781117383494411778628473338205738881306171898618743279822685898909456467697480367072137009305836876842889789453070018630428457995001209711512125549153451832765139729370048810493318961722003611573339328156893284010350363607726343399232620947316135205974106641183911144580398309813009696497198640339761050072658460854878990806620577935423846354697676662715165524430049733492280636437040406406169207400912384560112498853619694604336939888496073541532088054958426619842652789200164437270001935040514941943899890730579919088015195658363690815752313259250047600336760243996210742213381495712320612579967811052630418598399061009345808146979652736161164972546203257959560871866473106258573661886611930045347672933121430856517879252343766741058886515108015011098304405516998453503460039510717551549115823245195350239708000\n",
	output: "3\n"
}];

var countdown = 7200;

router.get('/armageddon', function (req, res) {
	if (countdown == 7200) setInterval(function() {
		countdown--;
	}, 999);
	res.send('Started.');
});

router.get('/login', function(req, res) {
	if (countdown == 7200) res.redirect('/rules');
	else if (req.user) res.redirect('/');
	else res.render('login');
});
router.post('/login', function(req, res, next) {
	if (countdown == 7200) res.redirect('/rules');
	else passport.authenticate('local', function(err, user, info) {
		if (err) return res.render('login', { error: err });

		if (!user) return res.render('login', { error: info });

		req.logIn(user, function(err) {
			if (err) return res.render('login', { error: err });
			return res.redirect('/');
		});
	})(req, res, next);
});

router.get('/logout', function(req, res) {
	req.logout();
	res.redirect('/');
});

router.all('*', function(req, res, next) {
	res.locals.user = req.user;
	res.locals.countdown = countdown;
	res.locals.problems = problems;
	next();
});

router.get('/rules', function(req, res) {
	res.render('rules', { });
});

router.all('*', function(req, res, next) {
	if (!req.user) res.redirect('/login');
	else next();
});

router.get('/', function(req, res, next) {
	res.render('play', { });
});

router.post('/', function(req, res) {
	function fail(msg) {
		res.render('play', { message: msg, success: false });
	}
	if (!req.body.problem || !req.body.lang || !req.body.code || !req.body.bet) {
		fail('Missing information.');
		return;
	}
	if (parseInt(req.body.problem) < 0 || parseInt(req.body.problem) > 10) {
		fail('Problem ' + req.body.problem + ' does not exist.');
		return;
	}
	if (req.user.codeCorrects.indexOf(req.body.problem) != -1) {
		fail('You have already solved problem ' + req.body.problem + '.');
		return;
	}
	if (req.user.codeScore < parseInt(req.body.bet)) {
		fail('Your bet cannot exceed your current score.');
		return;
	}
	if (countdown <= 0) {
		fail('Sorry, you ran out of time. Thank you for participating.');
		return;
	}

	var wd = path.join(__dirname, '../sandbox/' + req.user.username + '/' + req.body.problem);
	var sourcename = req.body.problem + '.' + req.body.lang;

	function finishedWithSuccess(success) {
		req.body.bet = Math.abs(parseInt(req.body.bet));
		var newScore = req.user.codeScore + req.body.bet * (success ? 1 : -1);
		var message = success ? ('Good job! +' + req.body.bet.toString() + '!') : ('Incorrect solution. -' + req.body.bet.toString() + '.');

		var updates = {
			$set: { codeScore: newScore }
		};
		if (success) updates.$push = { codeCorrects: req.body.problem };

		School.update({ username: req.user.username }, updates, function(error, user) {
			if (error) {
				console.log('error saving: ' + error);
				fail('Error updating database. Contact event master.');
			}
			else res.render('play', { message: message, success: success, newScore: newScore.toString() }); // newScore.toString because 0 is falsy
		});
	}
	function finishedWithError(runtime) {
		var newScore = req.user.codeScore - parseInt(req.body.bet) / 2;
		var message = (runtime ? 'Runtime' : 'Compilation') + ' error. You lose half your bet. Attached are some files for your debugging pleasure.';

		School.update({ username: req.user.username }, { $set: { codeScore: newScore }}, function(error, user) {
			if (error) {
				console.log('error saving: ' + error);
				res.render('play', { message: 'Error updating database. Contact event master.' });
			}
			else {
				var zip = new AdmZip();
				var zipName = randomstring.generate(5) + '.zip';
				zip.addLocalFolder(wd);
				zip.writeZip(path.join(__dirname, '../public/' + zipName));
				res.render('play', { message: message, success: false, attach: zipName, newScore: newScore.toString() });
			}
		});
	}

	function runTests(exec) {
		exec.stdin.setEncoding = 'utf-8';

		var output = '';
		var error = '';
		exec.stdin.on('error', function(err) {
			error = 'stdin was not read.';
			output = '';
		})
		exec.stdout.on('data', function(data) {
			output += data;
		});
		exec.stderr.on('data', function(data) {
			error += data;
		});
		exec.stdout.on('end', function(err) {
			fs.writeFile(path.join(wd, 'stdout.log'), output, function(err) {
				if (err) console.log(err);
			});
		});
		exec.stderr.on('end', function(err) {
			fs.writeFile(path.join(wd, 'stderr.log'), error, function(err) {
				if (err) console.log(err);
			});
		});

		exec.on('close', function(code) {
			if (code == null) {
				code = 10;
				fs.writeFile(path.join(wd, 'stderr.log'), error + '\n\nsubmission timed out', function(err) {
					if (err) console.log(err);
				});
			}
			console.log('submission exited with code ' + code.toString());
			if (code != 0) {
				finishedWithError(true);
			}
			if (output == problems[parseInt(req.body.problem)].output) {
				finishedWithSuccess(true);
			}
			else finishedWithSuccess(false);
		});
		
		setTimeout(function() {
			exec.kill('SIGKILL');
		}, 6000);

		var i = problems[parseInt(req.body.problem)].input;
		if (i) exec.stdin.write(i);
	}

	function proceed() {
		fs.writeFile(path.join(wd, sourcename), req.body.code, function(err) {
			if (err) {
				console.log(err);
				res.render('error', { message: 'Error writing to disk.', error: { status: 500 } });
				return;
			}

			if (req.body.lang == 'cpp' || req.body.lang == 'c') {
				var gcc = spawn((req.body.lang == 'cpp' ? 'g++' : 'gcc'), [path.join(wd, sourcename), '-o', path.join(wd, req.body.problem)]);

				var stdout = '';
				var stderr = '';
				gcc.stdout.on('data', function(data) {
					stdout += data;
				});
				gcc.stderr.on('data', function(data) {
					stderr += data;
				});
				gcc.stdout.on('end', function() {
					fs.writeFile(path.join(wd, 'stdout-gcc.log'), stdout, function(err) {
						if (err) console.log(err);
					});
				});
				gcc.stderr.on('end', function() {
					fs.writeFile(path.join(wd, 'stderr-gcc.log'), stderr, function(err) {
						if (err) console.log(err);
					});
				});

				gcc.on('close', function(code) {
					if (code != 0) {
						finishedWithError(false);
						return;
					}
					var exec = spawn(path.join(wd, req.body.problem));
					runTests(exec);
				});
			}
			if (req.body.lang == 'py') {
				var exec = spawn('python', [path.join(wd, sourcename)]);
				runTests(exec);
			}
			if (req.body.lang == 'js') {
				var exec = spawn('node', [path.join(wd, sourcename)]);
				runTests(exec);
			}
		});
	}

	fs.mkdir(path.join(__dirname, '../sandbox'), function(err) {
		fs.mkdir(path.join(__dirname, '../sandbox/' + req.user.username), function(err) {
			fs.mkdir(wd, function(err) {
				proceed();
			})
		})
	});
});

router.get('/leaderboard', function(req, res, next) {
	School.find().sort('-codeScore').select('name alias codeScore').exec(function(err, results) {
		if (!err) {
			res.render('leaderboard', { results: results });
		} else {
			console.log(err);
			res.render('leaderboard', { error: new Error('Error displaying the leaderboard.') });
		}
	});
});

module.exports = router;
